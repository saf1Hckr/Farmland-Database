
QUERY 1): Find the first and last name of the farmer who works in Apple and Cherry Orchard and the owner of that farmland.

Explanation: For this query I want to find the name of the farmer who works in the farmland named Apple and Cherry Orchard and the owner of that farmland. 

SELECT: Specifies the columns to be retrieved.
f.fname: First name of the farmer.
f.lname: Last name of the farmer.
fl.FLOwner: Owner of the farmland.
FROM: Specifies the tables involved in the query.
FARMER f: Alias f for the FARMER table.
FARMLAND fl: Alias fl for the FARMLAND table.
WHERE: Defines the conditions for selecting rows.
f.FLno = fl.FLNumber: Joins the FARMER and FARMLAND tables based on the farmland number.
FLName = 'Apple and Cherry Orchard': Filters the rows to include only those where the farmland name is 'Apple and Cherry Orchard'.

Outcome of the query:

Farmer first and last name = Neon Islam
Farmland Owner = Golam

------------------------------------------------------------------------------------------------

QUERY 2:) Retrieve the cattle number and cattle location for farmland number 5 

Explanation: This query retrieves the cattle number and location for cattle which are associated with farmland number 5.  

SELECT: Specifies the columns to be retrieved.
C.CNumber: Represents the cattle number.
CL.CLocation: Represents the cattle location.
FROM: Specifies the tables involved in the query.
CATTLE_LOCATION CL: Alias CL for the CATTLE_LOCATION table.
CATTLE C: Alias C for the CATTLE table.
WHERE: Defines the conditions for selecting rows.
C.CNumber IN (...): Filters the rows to include only those cattle whose numbers exist in the subquery result. The subquery selects cattle numbers (CNumber) from the CATTLE table where the farmland number (Flno) matches any farmland number with the value '5' from the FARMLAND table.
C.CNumber = CL.CNumber: Links the CATTLE and CATTLE_LOCATION tables based on the cattle number.

It returns the following result:

CNUMBER = 78539
CLocation = Mainfeld Underwater Area

------------------------------------------------------------------------------------------------


QUERY 3): Get the id of the Farmer who works with technology but has the highest year experience as a farmer.

Explanation: The database will return the id of the FARMER who works with the TECHNOLOGY but has the maximum year experience among the FARMER who also works with the TECHNOLOGY. 

SELECT: Specifies the columns to be retrieved.
f.Fid: Represents the farmer ID.
FROM: Specifies the tables involved in the query.
FARMER f: Alias f for the FARMER table.
TECHNOLOGY t: Alias t for the TECHNOLOGY table.
WHERE: Defines the conditions for selecting rows.
t.Frmrid = f.Fid: Joins the FARMER and TECHNOLOGY tables based on the farmer ID.
f.YrExperience = (SELECT MAX(YrExperience) FROM FARMER): Filters the rows to include only farmers whose year of experience is equal to the maximum year of experience among all farmers. This subquery retrieves the maximum year of experience from the FARMER table.
LIMIT 1: Restricts the result to only one row. For this query we got a duplicate result. So we use the LIMIT keyword to restrict it to 1. This ensures that only one farmer with the maximum year of experience who works with technology is returned.
Outcome result:

Fid = 5463875946


------------------------------------------------------------------------------------------------


QUERY 4): Gather the name of the companies where supplier works and the delivered items in the inventory by the supplier and the farmland size of the inventory is not between 100 AND 200 
 
Explanation: The following query will return the names of the company of the suppliers. The query will also return the delivered item of the suppliers for the inventory and the farmland size where the inventory is located will not be between 100 AND 200.

SELECT: Specifies the columns to be retrieved.
s.SCmpnyName: Represents the company name of the supplier.
s.SItemDelivery: Represents the item delivery details.
FROM: Specifies the tables involved in the query.
SUPPLIER s: Alias s for the SUPPLIER table.
INVENTORY i: Alias i for the INVENTORY table.
FARMLAND f: Alias f for the FARMLAND table.
WHERE: Defines the conditions for selecting rows.
i.Flnmbr = f.FLNumber: Joins the INVENTORY and FARMLAND tables based on the farmland number.
i.Supid = s.Sid: Joins the INVENTORY and SUPPLIER tables based on the supplier ID.
f.FLSize NOT BETWEEN 100 AND 200: Filters the rows to include only those farmlands whose size is not between 100 and 200.

Output Data:

SCmpnyName: 
   Vegetables Garden	
   Farm Fresh Livestock	
   NeoGen Corporation	
   Green Pastures Seeds	
   Reliable Logistics	

SItemDelivery: 
    All Vegetables
    Cattle
    All kinds of Zoo Animal
    Grass Seed & Forage Crops 
    Transportation and Warehousing 


------------------------------------------------------------------------------------------------


QUERY 5): Acquire the date of the visitors who visit the cattle 

Explanation: We want to retrieve the date of birth of the visitors who visit the cattles and order it by from asc to desc 

SELECT: Specifies the column to be retrieved.
v.VisitDoB: Represents the date of birth of visitors.
FROM: Specifies the table involved in the query.
VISITOR v: Alias v for the VISITOR table.
WHERE: Defines the condition for selecting rows.
v.Visitid IN (...): Filters the rows to include only those visitors whose IDs (Visitid) are found in the subquery result.
The subquery selects visitor IDs (vstid) from the CATTLE table, implying visitors associated with cattle.
ORDER BY: Specifies the sorting order for the result set.
v.VisitDoB DESC: Orders the result set by the visitors' date of birth (VisitDoB) in descending order by using DESC.


Result Output: 

VisitDOB: 
2002-12-16
1988-07-20
1979-01-28
1975-04-10
1971-02-01

------------------------------------------------------------------------------------------------


QUERY 6): Find out the name of the farmer who doesn't raise cattles.

Explanation: The query returns with the name of the farmer who doesnâ€™t raise cattles. 

SELECT: Specifies the columns to be retrieved.
f.fname: First name of the farmer.
f.lname: Last name of the farmer.
FROM: Specifies the table involved in the query.
FARMER f: Alias f for the FARMER table.
WHERE: Defines the condition for selecting rows.
NOT EXISTS (...): Filters the rows to include only those farmers for whom there does not exist any record in the RAISES table where the farmer's ID (f.Fid) matches the farmer ID in the RAISES table (r.fmid) and the cattle number in the CATTLE table (r.Ctlno).

Output DATA:

f.fname: Habiba
f.lname: Hafsa


------------------------------------------------------------------------------------------------


QUERY 7): Get the name of the technologies which have an average cost more than 10000 and are delivered by the same supplier.

Explanation: We want to find the name of the technologies which have an average cost more than 10000 and are delivered by the same supplier. 

SELECT: Specifies the columns to be retrieved.
S.Sid: Represents the supplier ID.
T.TechName: Represents the name of the technology.
FROM: Specifies the tables involved in the query.
TECHNOLOGY T: Alias T for the TECHNOLOGY table.
SUPPLIER S: Alias S for the SUPPLIER table.
WHERE: Defines the conditions for selecting rows.
T.Spid = S.Sid: Specifies the join condition between the TECHNOLOGY and SUPPLIER tables based on the supplier ID.
GROUP BY: Groups the result set by the technology name (T.TechName).
HAVING: Specifies the condition for the grouped rows after the GROUP BY operation.
AVG(T.TechCost) > 10000: Filters the groups to include only those with an average technology cost greater than 10000.
Result:

Sid: 

1234567890
099557030
357951852

TechName: 

FARM DATABASE SYSTEM
Pumping Machine
Tractor

------------------------------------------------------------------------------------------------

QUERY 8): Retrieve the visitor names and the types of their visit who visit the farmland number 8

Explanation: We want to get the names of the visitors and their visit type who visit the farmland number 8

SELECT: Specifies the columns to be retrieved.
v.VisitName: Represents the name of the visitor.
v.VisitType: Represents the type of visit.
FROM: Specifies the tables involved in the query.
VISITOR v: Alias v for the VISITOR table.
VISITS vs: Alias vs for the VISITS table.
FARMLAND f: Alias f for the FARMLAND table.
WHERE: Defines the conditions for selecting rows.
vs.Vid = v.Visitid: Specifies the join condition between the VISITS and VISITOR tables based on the visitor ID.
vs.Flnumber = f.FLNumber: Specifies the join condition between the VISITS and FARMLAND tables based on the farmland number.
f.FLNumber = '8': Filters the rows to include only those with a farmland number equal to '8'.


Output Result:

VisitName: 
Emily Brown
Daniel Garcia

VisitType:

Couple Trip
Business Trip


------------------------------------------------------------------------------------------------


QUERY 9): Retrieve the Suppliers who supplies to both Inventory and Technology and contains the word 'NET'

Explanation: The queries want to obtain the payment terms of the suppliers who supplies to both Inventory and Technology and contains the word 'NET'.

SELECT DISTINCT: Specifies the distinct payment terms to be retrieved.
s.SPaymentTerms: Represents the payment terms of the supplier.
FROM: Specifies the tables involved in the query.
SUPPLIER s: Alias s for the SUPPLIER table.
INVENTORY i: Alias i for the INVENTORY table.
TECHNOLOGY t: Alias t for the TECHNOLOGY table.
WHERE: Defines the conditions for selecting rows.
i.Supid = s.Sid: Joins the INVENTORY and SUPPLIER tables based on the supplier ID.
t.Spid = s.Sid: Joins the TECHNOLOGY and SUPPLIER tables based on the supplier ID.
s.SPaymentTerms LIKE '%Net%': Filters the rows to include only those with payment terms containing the substring 'Net'.

Result Output:

SPaymentTerms: 
   Net 120
   Net 60


------------------------------------------------------------------------------------------------


QUERY 10): Find the name of the minimum year experience of the Farmer who raise the Cattles

Explanation: We want to get the first and last name of the farmer who raises the cattles and has the minimum year experience as a farmer.

SELECT: Specifies the columns to be retrieved.
f.fname: Represents the first name of the farmer.
f.lname: Represents the last name of the farmer.
FROM: Specifies the tables involved in the query.
FARMER f: Alias f for the FARMER table.
CATTLE c: Alias c for the CATTLE table.
RAISES r: Alias r for the RAISES table.
WHERE: Defines the conditions for selecting rows.
r.Fmid = f.Fid: Joins the RAISES and FARMER tables based on the farmer ID (Fid).
r.Ctlno = c.CNumber: Further joins the RAISES and CATTLE tables based on the cattle number (CNumber).
f.YrExperience = (SELECT MIN(YrExperience) from FARMER): Filters the rows to include only those farmers whose years of experience are equal to the minimum years of experience among all farmers.

Query Result:

f.fname: Nafisul 
f.lname: Haque
